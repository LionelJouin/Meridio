---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.applicationName }}
  labels:
    app: {{ .Values.applicationName }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.applicationName }}
  replicas: 4
  template:
    metadata:
      labels:
        app: {{ .Values.applicationName }}
        "spiffe.io/spiffe-id": "true"
    spec:
      containers:
        - name: ctraffic
          image: {{ .Values.registry }}/{{ .Values.organization }}/{{ .Values.ctraffic.image }}:{{ .Values.ctraffic.version }}
          imagePullPolicy: {{ .Values.pullPolicy }}
          args:
            - ./target-client open -t {{ .Values.default.trench.name }} -c {{ .Values.default.conduit.name }} -s {{ .Values.default.stream.name }} ;
              screen -d -m bash -c "./ctraffic -server -address [::]:5000" ; 
              screen -d -m bash -c "./ctraffic -server -address [::]:5001" ; 
              screen -d -m bash -c "./ctraffic -server -address [::]:5002" ; 
              screen -d -m bash -c "./ctraffic -server -udp -address [::]:5003" ; 
              screen -d -m bash -c "./ctraffic -server -udp -address [::]:5004" ; 
              tail -f /dev/null
          command:
            - /bin/bash
            - -c
          securityContext:
            privileged: true
          env:
            - name: MERIDIO_AMBASSADOR_SOCKET
              value: unix:///var/lib/meridio/ambassador.sock
          volumeMounts:
            - name: meridio-socket
              mountPath: /var/lib/meridio
              readOnly: true
        - name: tapa
          image: {{ .Values.registry }}/{{ .Values.organization }}/{{ .Values.tapa.image }}:{{ .Values.tapa.version }}
          imagePullPolicy: {{ .Values.pullPolicy }}
          startupProbe:
{{ toYaml .Values.startupProbe | indent 12 }}
          readinessProbe:
{{ tpl (toYaml .Values.readinessProbe) . | indent 12 }}
          livenessProbe:
{{ toYaml .Values.livenessProbe | indent 12 }}
          securityContext:
            readOnlyRootFilesystem: true
          env:
            - name: SPIFFE_ENDPOINT_SOCKET
              value: unix:///run/spire/sockets/agent.sock
            - name: MERIDIO_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MERIDIO_NODE
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: MERIDIO_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: MERIDIO_NSM_SOCKET
              value: unix:///var/lib/networkservicemesh/nsm.io.sock
            - name: MERIDIO_NSP_SERVICE_NAME
              value: {{ .Values.nsp.serviceName }}
            - name: MERIDIO_NSP_SERVICE_PORT
              value: "{{ .Values.nsp.targetPort }}"
            - name: MERIDIO_SOCKET
              value: "{{ .Values.default.ambassadorSock }}"
            - name: NSM_MAX_TOKEN_LIFETIME
              value: {{ .Values.default.maxTokenLifetime }}
          volumeMounts:
            - name: spire-agent-socket
              mountPath: /run/spire/sockets
              readOnly: true
            - name: nsm-socket
              mountPath: /var/lib/networkservicemesh
              readOnly: true
            - name: meridio-socket
              mountPath: /var/lib/meridio
              readOnly: false
            - name: tmp
              mountPath: /tmp
              readOnly: false
      volumes:
        - name: spire-agent-socket
          hostPath:
            path: /run/spire/sockets
            type: Directory
        - name: nsm-socket
          hostPath:
            path: /var/lib/networkservicemesh
            type: DirectoryOrCreate
        - name: meridio-socket
          emptyDir: {}
        - name: tmp
          emptyDir:
            medium: Memory
