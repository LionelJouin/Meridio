// Code generated by MockGen. DO NOT EDIT.
// Source: ./pkg/ambassador/tap/stream/conduit.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockConduit is a mock of Conduit interface.
type MockConduit struct {
	ctrl     *gomock.Controller
	recorder *MockConduitMockRecorder
}

// MockConduitMockRecorder is the mock recorder for MockConduit.
type MockConduitMockRecorder struct {
	mock *MockConduit
}

// NewMockConduit creates a new mock instance.
func NewMockConduit(ctrl *gomock.Controller) *MockConduit {
	mock := &MockConduit{ctrl: ctrl}
	mock.recorder = &MockConduitMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConduit) EXPECT() *MockConduitMockRecorder {
	return m.recorder
}

// GetIPs mocks base method.
func (m *MockConduit) GetIPs() []string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetIPs")
	ret0, _ := ret[0].([]string)
	return ret0
}

// GetIPs indicates an expected call of GetIPs.
func (mr *MockConduitMockRecorder) GetIPs() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetIPs", reflect.TypeOf((*MockConduit)(nil).GetIPs))
}
